
################## Resource Server configuration ######################
##### It has been configured for three different cases of AS ##########
##### Case- [1] When AS stores token using in-memory approach. ########
##### Case- [2] When AS stores token using jdbc-token approach. #######
##### Case- [3] When AS stores token using jwt token approach. ########
#######################################################################

### RS running port ###
server.port=7777

##### Case- [in-memory]: Checking token validity from AS
#security.oauth2.resource.token-info-uri=${auth-server:http://localhost:8080}/oauth/check_token

##### Case- [jdbc-token]: Checking token validity from AS
#security.oauth2.resource.token-info-uri=${auth-server:http://localhost:5555}/oauth/check_token

##### Case- [jwt-token] : Fetching JWT-Token key from AS
security.oauth2.resource.jwt.key-uri=${auth-server:http://localhost:8080}/oauth/token_key



#### RS has to supply the right client-credential while making a call on AS so that AS could check token in the behalf 
## of specific client ####

security.oauth2.client.client-id=PracticeOnNet
security.oauth2.client.client-secret=secret

#### Remark: These client information also comes with the request. Can also be set dynamically. ####



